{"version":3,"sources":["wrong.mp3","click.mp3","jeopardy.mp3","ding.mp3","components/Alert.js","components/TopicsSelection.js","connect/actions.js","connect/types.js","components/Loading.js","components/Roulette.js","components/ScoreBoard.js","components/Question.js","components/GameBoard.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","connect/reducers.js","index.js"],"names":["module","exports","Alert","message","button","onClick","className","connect","state","topics","availableTopics","dispatch","useState","topicsSelected","setTopics","p1","setP1","p2","setP2","alert","setAlert","handleChange","e","index","target","value","exists","i","length","id","splice","push","onSubmit","preventDefault","type","topic","name1","name2","htmlFor","onChange","required","map","key","tabIndex","name","disabled","Loading","player","players","spinning","setSpinning","category","setCategory","difficulty","setDifficulty","loading","setLoading","handleRadio","getQuestion","a","url","fetch","data","json","question","results","checked","categorySelected","randomNumber","Math","floor","random","audio","Audio","click","interval","setInterval","play","setTimeout","clearInterval","pause","playerOneName","player1","playerTwoName","player2","playerOneScore","score","playerTwoScore","turn","answers","incorrect_answers","correct_answer","sort","points","setPoints","time","setTime","jeopardy","setAudio","availableAnswers","useEffect","timer","clearTimeout","wrong","undefined","handleAnswer","ding","aria-label","style","width","backgroundColor","unescape","answer","playerOne","playerTwo","Header","Footer","response","trivia_categories","fetchUrl","Boolean","window","location","hostname","match","initialState","reducer","action","console","log","Object","assign","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e1f3d519.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wrong.093eed4f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/click.8d084854.mp3\";","module.exports = __webpack_public_path__ + \"static/media/jeopardy.0b4493b3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ding.87b25ba2.mp3\";","import React from \"react\";\r\n\r\n// Component for pop-up alerts\r\n\r\nfunction Alert({ message, button, onClick }) {\r\n    return (\r\n        <div className=\"alert\">\r\n            <p>{message}</p>\r\n            <button onClick={onClick}>{button}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import React from \"react\";\r\nimport { selectTopic } from \"../connect/actions\"\r\nimport { connect} from \"react-redux\"\r\nimport { useState } from \"react\";\r\nimport Alert from \"./Alert\" \r\n\r\nfunction TopicSelection({ availableTopics, dispatch}) {\r\n    \r\n    const [topicsSelected, setTopics] = useState([])\r\n    const [p1, setP1] = useState(\"P1\")\r\n    const [p2, setP2] = useState(\"P2\")\r\n    const [alert, setAlert] = useState(false)\r\n\r\n    // Handle submit\r\n\r\n    const handleSelection = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        // If the user selected less than 4 topics show an alert,if not dispatch topics and players names to state\r\n\r\n        if(topicsSelected.length >= 4){\r\n            dispatch(selectTopic(topicsSelected, p1, p2));\r\n        }else{\r\n            setAlert(true)\r\n        }\r\n        \r\n    }\r\n\r\n    // handle change on selected topics\r\n\r\n    const handleChange = (e) => {\r\n        const index = e.target.value\r\n\r\n        // If the topic that changed already exists in the topics list then remove it from the selection if nt add it.\r\n\r\n        let exists = false;\r\n        \r\n        for (let i = 0; i < topicsSelected.length; i++){\r\n            if (topicsSelected[i].id === availableTopics[index].id) {\r\n                exists = true;\r\n                const topics = [...topicsSelected];\r\n                topics.splice(i, 1)\r\n                setTopics(topics);\r\n                return\r\n            }\r\n        }\r\n\r\n        if (!exists) {\r\n            const topics = [...topicsSelected];\r\n            topics.push(availableTopics[index])\r\n            setTopics(topics);   \r\n        } \r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <form className=\"selectTopicDiv\" onSubmit={handleSelection}>\r\n                <p>Please enter the player's names and select at least 4 topics. Each player will answer 5 random questions related to the topics selected and the player with most points at the end of the game wins! The player can select the level of difficulty for each questions and will rcieve points depending on the level selected. Let the wisest player win!</p>\r\n                <div className=\"playersNames\">\r\n                    <label htmlFor=\"playerOne\" >Player One: </label>\r\n                    <input type=\"text\" id=\"playerOne\" onChange={(e)=>{setP1(e.target.value)}} value={p1} required />\r\n                    <label htmlFor=\"playerTwo\">Player Two: </label>\r\n                    <input type=\"text\" id=\"playerTwo\" onChange={(e) => { setP2(e.target.value) }} value={p2} required />\r\n                </div>\r\n                <ul className=\"topicsContainer\">{availableTopics.map((topic, index) => {\r\n                    return (\r\n                        <li className=\"topicElement\" key={index}>\r\n                            <input tabIndex={0} onChange={handleChange} type=\"checkbox\" name={topic.name} id={topic.name} value={index} />\r\n                            <label  htmlFor={topic.name}>{topic.name}</label>\r\n                        </li>\r\n                    )\r\n                })}</ul>\r\n                {alert ? <Alert message=\"Please select at least 4 topics from the list!\" button=\"OK\" onClick={()=>{setAlert(false)}}/> : \"\"}\r\n                <button disabled={alert} type=\"submit\">START</button>\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        topics: state.topics\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(TopicSelection)","import { SELECT_TOPICS, SET_QUESTION, ANSWER, RESTART } from \"./types\";\r\n\r\nexport const selectTopic = (topic, name1, name2) => {\r\n    return {\r\n        type: SELECT_TOPICS,\r\n        topic: topic,\r\n        name1: name1,\r\n        name2: name2\r\n    }\r\n}\r\n\r\nexport const setQuestion = (question) => {\r\n    return {\r\n        type: SET_QUESTION,\r\n        question: question\r\n    }\r\n}\r\n\r\nexport const answer = (points) => {\r\n    return {\r\n        type: ANSWER,\r\n        points: points\r\n    }\r\n}\r\n\r\nexport const restart = () => {\r\n    return {\r\n        type: RESTART\r\n    }\r\n}","export const SELECT_TOPICS = \"SELECT_TOPICS\";\r\nexport const SET_QUESTION = \"SET_QUESTION\";\r\nexport const ANSWER = \"ANSWER\";\r\nexport const RESTART = \"RESTART\"","import React from \"react\";\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div className=\"loaderContainer\">\r\n            <div className=\"loader\"></div>\r\n            <p>Loading...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading","import React, { useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setQuestion } from \"../connect/actions\";\r\nimport click from \"../click.mp3\";\r\nimport Loading from \"./Loading\"\r\n\r\n\r\nfunction Roulette({ topics, player, dispatch }) {\r\n\r\n    const [spinning, setSpinning] = useState(false);\r\n    const [category, setCategory] = useState(topics[0]);\r\n    const [difficulty, setDifficulty] = useState(\"easy\");\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    \r\n    const handleRadio = (e) => {\r\n        setDifficulty(e.target.value)\r\n    }\r\n    \r\n    const getQuestion = async (category, difficulty) => {\r\n\r\n        setLoading(true)\r\n\r\n        const url = `https://opentdb.com/api.php?amount=1&category=${category.id}&difficulty=${difficulty}&type=multiple&encode=url3986`;\r\n        \r\n        const data = await fetch(url);\r\n        \r\n        const json = await data.json();\r\n        \r\n        dispatch(setQuestion(json.results[0]));\r\n        setSpinning(false)\r\n        setLoading(false)\r\n        \r\n        \r\n        \r\n    }\r\n    \r\n\r\n    const spin = () => {\r\n        setSpinning(true);\r\n        let i = 0;\r\n        let categorySelected = \"\";\r\n        const randomNumber = Math.floor(Math.random() * 3000 + 1000);\r\n        const audio = new Audio(click);\r\n        const interval = setInterval(() => {\r\n            audio.play();\r\n            categorySelected = topics[i]\r\n            setCategory(categorySelected)\r\n            if (i === topics.length - 1) {\r\n                i = 0;\r\n            } else {\r\n                i++\r\n            }\r\n        }, 100 );\r\n\r\n        setTimeout(() => {\r\n            clearInterval(interval)\r\n            audio.pause();\r\n            getQuestion(categorySelected, difficulty)\r\n           \r\n        }, randomNumber);\r\n    }\r\n\r\n    return (\r\n        <div className=\"rouletteDiv\">\r\n            {loading && <Loading/>}\r\n            <h2>{`${player}'s turn`}</h2>\r\n            <p className=\"rouletteCategory\"> <span>Category:</span> {`${category.name}`}</p>\r\n            <div className=\"rouletteRadioButtons\">\r\n                <input disabled={spinning} type=\"radio\" name=\"easy\" value=\"easy\" id=\"easy\" checked={difficulty === \"easy\"} onChange={handleRadio} />\r\n                <label  htmlFor=\"easy\">Easy (1pt)</label>\r\n                <input disabled={spinning} type=\"radio\" name=\"medium\" id=\"medium\" value=\"medium\" checked={difficulty === \"medium\"} onChange={handleRadio}/>\r\n                <label htmlFor=\"medium\">Medium (2pt)</label>\r\n                <input disabled={spinning} type=\"radio\" name=\"hard\" id=\"hard\" value=\"hard\" checked={difficulty === \"hard\"} onChange={handleRadio} />\r\n                <label htmlFor=\"hard\">Hard (3pt)</label>\r\n\r\n            </div>\r\n\r\n            <button disabled={spinning} onClick={spin}>Spin</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        topics: state.topics,\r\n        player: state.players[state.player].name,\r\n        \r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(Roulette)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nfunction ScoreBoard({ playerOneName, playerTwoName, playerOneScore, playerTwoScore, turn}){\r\n    return(\r\n        <div className=\"scoreBoard\">\r\n            <h3>{turn < 5 ? `Turns Remaning: ${6 - turn}` : \"Last Turn!\"}</h3>\r\n            <div className=\"playersScores\">\r\n                \r\n                <p> <span>{`${playerOneName}: `}</span> {`${playerOneScore}`}</p>\r\n                <p>VS</p>\r\n                <p><span>{`${playerTwoName}: `}</span>{`${playerTwoScore}`}</p>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        playerOneName: state.players.player1.name,\r\n        playerTwoName: state.players.player2.name,\r\n        playerOneScore: state.players.player1.score,\r\n        playerTwoScore: state.players.player2.score,\r\n        turn: state.turn\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(ScoreBoard)","import React, { useState } from \"react\";\r\nimport {answer} from \"../connect/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport Alert from \"./Alert\"\r\nimport jeopardy from \"../jeopardy.mp3\"\r\nimport ding from \"../ding.mp3\"\r\nimport wrong from \"../wrong.mp3\"\r\nimport { useEffect } from \"react\";\r\n\r\nfunction Question({ question, dispatch, player }) {\r\n    \r\n    const answers = [...question.incorrect_answers, question.correct_answer].sort(function () {\r\n        return .5 - Math.random();\r\n    });\r\n\r\n    const [points, setPoints] = useState();\r\n    const [time, setTime] = useState(15);\r\n    const [audio, setAudio] = useState(new Audio(jeopardy));\r\n    const [availableAnswers] = useState(answers)\r\n\r\n    // store all the answers, correct and incorrect and shuffle them\r\n\r\n\r\n    // Handle answer submition, if the selected answer is correct add points if not give 0 points.\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        time >= 10 && audio.play();\r\n\r\n        const timer =  setTimeout(() => {\r\n            if (time === 0 ) {\r\n                clearTimeout(timer)\r\n                audio.pause();\r\n                setAudio(new Audio(wrong))\r\n                setPoints(0);\r\n            } else if(points === undefined) {\r\n                \r\n                setTime(time - 1)\r\n            }\r\n        }, 1000);\r\n        \r\n    }, [time])\r\n    \r\n    useEffect(() => {\r\n        audio.play()\r\n    },[audio])\r\n\r\n\r\n\r\n\r\n    const handleAnswer = (e) => {\r\n        const answerSelected = e.target.value;\r\n\r\n        // Set amount of point depending on the difficulty of the question\r\n\r\n        if (answerSelected === question.correct_answer) {\r\n            audio.pause();\r\n            setAudio(new Audio(ding))\r\n            switch (question.difficulty) {\r\n                case \"easy\":\r\n                    setPoints(1);\r\n                    break;\r\n                case \"medium\":\r\n                    setPoints(2);\r\n                    break;\r\n                default:\r\n                    setPoints(3);\r\n                    break\r\n            }\r\n        } else {\r\n            audio.pause();\r\n            setAudio(new Audio(wrong))\r\n            setPoints(0);\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    const next = () => {\r\n        // dispatch points to the state\r\n        \r\n        dispatch(answer(points));\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"questionContainer\">\r\n            <div className=\"timer\">\r\n                \r\n                <i className=\"fas fa-stopwatch\" aria-label=\"Timer:\"></i>\r\n                <div className=\"timerContainer\">\r\n\r\n                    <div className=\"timerInner\" style={\r\n                    {\r\n                        width: `${100 - ((100 / 15) * (15 - time))}%`,\r\n                        backgroundColor: `${time > 5 ? \"gold\" : \"var(--brightColour)\"}`\r\n                    }\r\n                    }>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <h2>{`Category: ${unescape(question.category)}`}</h2>\r\n            <h3>{unescape(question.question)}</h3>\r\n            <div className=\"options\">\r\n\r\n                {availableAnswers.map(answer => {\r\n                    return <button disabled={points >= 0?true:false} onClick={handleAnswer} value={answer}>{unescape(answer)}</button>\r\n                })}\r\n            </div>\r\n            \r\n            {points !== undefined ? <Alert message={points === 0 ? `${player} Your answer was incorrect!` : `CORRECT ${player}! You win ${points} ${points>1?\"points.\":\"point.\"}`} button=\"OK\" onClick={next} /> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        player: state.players[state.player].name\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(Question);","import React from \"react\";\r\nimport Roulette from \"./Roulette\"\r\nimport ScoreBoard from \"./ScoreBoard\"\r\nimport Question from \"./Question\"\r\nimport Alert from \"./Alert\"\r\nimport { connect } from \"react-redux\";\r\nimport { restart } from \"../connect/actions\"\r\n\r\n\r\n\r\nfunction GameBoard({ question, turn, playerOneScore, playerTwoScore, playerOne, playerTwo, dispatch }) {\r\n    \r\n    // Function to restart the game;\r\n\r\n    const restartGame = () => {\r\n        dispatch(restart())\r\n    }\r\n    \r\n    return (\r\n        <div className=\"gameBoard wrapper\">\r\n            <ScoreBoard/>\r\n            \r\n            {\r\n                question !== null\r\n                ?\r\n                <Question question={question} />\r\n                :\r\n                <Roulette />\r\n            }\r\n\r\n            {\r\n                turn !== 6 \r\n                ? \r\n                \"\"\r\n                :\r\n                <Alert \r\n                message={\r\n                    playerOneScore === playerTwoScore \r\n                    ? \r\n                    \"It's a tie! Play again and see who wins!\" \r\n                    : \r\n                    playerOneScore > playerTwoScore \r\n                                    ?\r\n                                    `${playerOne} Wins !!! Hey ${playerTwo} can you beat ${playerOne}? Ask for a REMATCH!`\r\n                                    :\r\n                                    `${playerTwo} Wins!!! Hey ${playerOne} can you beat ${playerTwo}? Ask for a REMATCH!`\r\n                }\r\n                button=\"Restart\"\r\n                onClick={restartGame} />}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// Map state to props\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        question: state.question,\r\n        turn: state.turn,\r\n        playerOneScore: state.players.player1.score,\r\n        playerTwoScore: state.players.player2.score,\r\n        playerOne: state.players.player1.name,\r\n        playerTwo: state.players.player2.name,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(GameBoard)","import React from \"react\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <h1>Trivia <span>Battle</span></h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\"\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <p>Created by Juan Acaiturri-Villa © 2020</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useEffect, useState, Fragment } from 'react';\nimport './App.css';\n\nimport TopicSelection from \"./components/TopicsSelection\";\nimport GameBoard from \"./components/GameBoard\"\nimport Header from \"./components/Header\"\nimport Footer from \"./components/Footer\"\nimport Loading from \"./components/Loading\"\n\n\nimport {connect } from \"react-redux\"\n\n\nfunction App({ topics, players, question, turn  }) {\n\n  const [availableTopics, setTopics] = useState([]);\n  const [loading, setLoading] = useState(true)\n\n  async function fetchUrl(url) {\n    const response = await fetch(url);\n    const json = await response.json();\n    setTopics(json.trivia_categories);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    fetchUrl(\"https://opentdb.com/api_category.php\");\n  }, []);\n  \n    \n  \n  \n\n  return (\n    <Fragment>\n      <Header/>\n      {loading ?\n        <Loading/>\n        :\n        topics.length\n          ?\n          <GameBoard />\n          :\n          <TopicSelection availableTopics={availableTopics} />}\n      <Footer/>\n\n    </Fragment>\n\n     \n    \n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    topics: state.topics,\n    players: state.players,\n    question: state.question,\n    turn: state.turn\n  }\n}\n\nexport default connect(mapStateToProps, null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SELECT_TOPICS, SET_QUESTION, ANSWER, RESTART } from \"./types\";\r\n\r\n\r\nconst initialState = {\r\n    topics: [],\r\n    players: {\r\n        player1: {\r\n            name: \"\",\r\n            score: 0\r\n        },\r\n        player2: {\r\n            name: \"\",\r\n            score: 0\r\n        }\r\n    },\r\n    turn: 1,\r\n    player: \"player1\",\r\n    question: null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SELECT_TOPICS:\r\n            console.log(action.topic)\r\n            return Object.assign({}, state, {\r\n                topics: [...action.topic],\r\n                players: {\r\n                    player1: {\r\n                        name: action.name1,\r\n                        score: 0\r\n                    },\r\n                    player2: {\r\n                        name: action.name2,\r\n                        score: 0\r\n                    }\r\n                },\r\n                player: \"player1\"\r\n\r\n            });\r\n        case SET_QUESTION:\r\n            return Object.assign({}, state, {\r\n                question: action.question\r\n            });\r\n        case ANSWER:\r\n            \r\n            \r\n            return Object.assign({}, state, {\r\n                question: null,\r\n                player: state.player === \"player1\" ? \"player2\" : \"player1\",\r\n                turn: state.player === \"player2\" ? state.turn + 1 : state.turn,\r\n                players: {\r\n                    player1: {\r\n                        score: state.player === \"player1\" ? state.players.player1.score + action.points : state.players.player1.score,\r\n                        name: state.players.player1.name\r\n                        \r\n                    },\r\n                    player2: {\r\n                        score: state.player === \"player2\" ? state.players.player2.score + action.points : state.players.player2.score,\r\n                        name: state.players.player2.name\r\n                    }\r\n                }\r\n\r\n\r\n            });\r\n        case RESTART:\r\n            return Object.assign({}, initialState);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\"\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from \"redux\";\nimport reducer from \"./connect/reducers\" \n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}